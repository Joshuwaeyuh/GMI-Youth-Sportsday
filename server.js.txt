const express = require('express');
const bodyParser = require('body-parser');
const fs = require('fs');
const cors = require('cors');

const app = express();
const port = 3000;
const dataFile = 'participants.json';

app.use(bodyParser.json());
app.use(cors());

// Load participants from file
const loadParticipants = () => {
    if (fs.existsSync(dataFile)) {
        const rawData = fs.readFileSync(dataFile);
        return JSON.parse(rawData);
    }
    return { red: [], blue: [], green: [], yellow: [] };
};

// Save participants to file
const saveParticipants = (participants) => {
    fs.writeFileSync(dataFile, JSON.stringify(participants, null, 2));
};

// Get participants
app.get('/participants', (req, res) => {
    const participants = loadParticipants();
    res.json(participants);
});

// Add participant
app.post('/participants', (req, res) => {
    const { name } = req.body;
    if (!name) {
        return res.status(400).json({ error: 'Name is required' });
    }

    const participants = loadParticipants();
    const teams = Object.keys(participants);
    const smallestTeam = teams.reduce((smallest, team) => {
        return participants[team].length < participants[smallest].length ? team : smallest;
    }, teams[0]);

    participants[smallestTeam].push(name);
    saveParticipants(participants);
    res.json(participants);
});

// Reset teams
app.post('/reset', (req, res) => {
    const participants = { red: [], blue: [], green: [], yellow: [] };
    saveParticipants(participants);
    res.json(participants);
});

app.listen(port, () => {
    console.log(`Server running at http://localhost:${port}/`);
});
